---
import Layout from "../../layouts/Layout.astro" 
import Image from "../../components/Image.astro" 
import Section from "../../components/Section.astro" 
import SubSection from "../../components/SubSection.astro" 
import SubSubSection from "../../components/SubSubSection.astro" 
import BlueText from "../../components/BlueText.astro" 
import InlineEquation from "../../components/InlineEquation.astro" 
import DisplayEquation from "../../components/DisplayEquation.astro" 
import Item from "../../components/Item.astro"
import Itemize from "../../components/Itemize.astro"
---
<Layout title="Buckling">
<Section title="Buckling">

<strong>Buckling</strong> is the sudden change in shape of a structural component under a compressive load

<Image src='/Solid_Mechanics/Buckling-Figures/BuckleVSDeflect.png' width='4'>  <BlueText>Taken from TAM251 Lecture Notes - L13S2 </BlueText></Image>

 The beam is still able to withstand normal loads, but buckling causes an <strong>instability</strong>. Small perturbations make the structure unstable. 



 Failure is elastic (<InlineEquation equation='\\sigma < \\sigma_Y' />), but if increased loads are applied, further deformation and plastic failure (yielding) / brittle failure (fracture) can occur (post-buckling failure).
</Section>
<SubSection title="Stability of Structures"></SubSection>

<SubSubSection title="Single Column">

<Image src='/Solid_Mechanics/Buckling-Figures/Stability of Structures.png' width='1.75'>  <BlueText>Taken from TAM251 Lecture Notes - L13S3</BlueText></Image>

 Column <InlineEquation equation='AB' /> is supporting uniaxial compressive load <InlineEquation equation='P' />. To properly design this column, the cross-section must satisfy the following:

<DisplayEquation equation='\\sigma = \\frac{P}{A} \\le \\sigma_{all}\\' />
<DisplayEquation equation='\\delta = \\frac{PL}{EA} \\le \\delta_{spec}\\' />

 Increasing the load can cause the column to buckle <InlineEquation equation='\\rightarrow' /> instability causing failure.
</SubSubSection>
<SubSubSection title="Two Rods and a Torsional Spring">

<Image src='/Solid_Mechanics/Buckling-Figures/TwoRods.png' width='4'>  <BlueText>Taken from TAM251 Lecture Notes - L13S4</BlueText></Image>

 Rods <InlineEquation equation='AC' /> and <InlineEquation equation='CB' /> are perfectly aligned and a torsional spring connects them at point <InlineEquation equation='C' />. For small perturbations, point <InlineEquation equation='C' /> moves to the right.

<Itemize>
	<Item>If </Item>
	<Item>If </Item>
</Itemize>

<Image src='/Solid_Mechanics/Buckling-Figures/TopRodFBD.png' width='1'><BlueText>Taken from TAM251 Lecture Notes - L13S5</BlueText></Image>


 The spring restoring moment is 

<DisplayEquation equation='M_s = K(2\\Delta\\theta)= \\text{restoring moment}\\' />

 The moment resultant from the applied load P tends to move the rod away from the vertical position

<DisplayEquation equation='M_{load} = P\\frac{L}{2}\\sin\\Delta\\theta = P\\frac{L}{2}\\Delta\\theta = \\text{destabilizing moment}\\' />

<Itemize>
	<Item>Stable system: </Item>
	<Item>Unstable system: </Item>
	<Item>Equilibrium position gives: </Item>
</Itemize>


 The critical load can be found with

<DisplayEquation equation='P_{cr} = \\frac{4K}{L}\\' />

 <BlueText><strong>**Expandable Derivation**</strong></BlueText>

<BlueText>
<DisplayEquation equation='M_s = M_{load}\\' />
<DisplayEquation equation='K(2\\Delta\\theta) = P_{cr}\\frac{L}{2}\\Delta\\theta\\' />
</BlueText>

 <BlueText><strong>**End Derivation**</strong></BlueText>

</SubSubSection>

<SubSection title="Euler's formula">

<BlueText>Euler's formula can be used to solve for the critical load of a uniaxially loaded column. 
</BlueText>

</SubSection>

<SubSubSection title="Pinned-end Columns">

<Image src='/Solid_Mechanics/Buckling-Figures/Pinned.png' width='3'>  <BlueText>Taken from TAM251 Lecture Notes - L13S6</BlueText></Image>

 Rod <InlineEquation equation='AB' /> is pinned on each end.

 Equilibrium gives

<DisplayEquation equation='M = -Py\\' />

 After a small perturbation, the system reaches equilibrium 


<DisplayEquation equation='M(x) = EIy''(x)\\' />
<DisplayEquation equation='EIy'' = -Py\\' />
<DisplayEquation equation='y'' + \\frac{P}{EI}y = 0\\' />

 Linear, homogeneous differential equation of second order with constant coefficients. The general solution is 

<DisplayEquation equation='y(x) = A\\sin(px) + B\\cos(px)\\' />

 With boundary conditions 
<DisplayEquation equation='y(0) = y(L) = 0\\' />

 Euler's Formula 
<DisplayEquation equation='P_{cr} = \\frac{\\pi^2EI}{L^2}\\' />

 Buckling occurs at
<DisplayEquation equation='P > P_{cr}\\' />



 <BlueText><strong>**Expandable Derivation**</strong></BlueText>

<BlueText>
<DisplayEquation equation='y(x) = A\\sin(\\sqrt{\\frac{P}{EI}}x) + B\\cos(\\sqrt{\\frac{P}{EI}}x)\\' />
<DisplayEquation equation='y(x=0)=0 \\rightarrow A\\sin(0)+B\\cos(0) = 0\\' />
<DisplayEquation equation='B=0\\' />
<DisplayEquation equation='y(x=L)=0 \\rightarrow A\\sin(\\sqrt{\\frac{P}{EI}}L)+0 = 0\\' />
<DisplayEquation equation=' A\\sin(\\sqrt{\\frac{P}{EI}}L)=0\\' />
 This has two solutions
</BlueText>




 <BlueText>
<DisplayEquation equation='A = 0 \\rightarrow \\text{not interesting}\\' />
 </BlueText>

 <BlueText>
<DisplayEquation equation="A = n \\rightarrow n \\text{any number except where} A\\sin(\\sqrt{\\frac{P}{EI}}L) = n\\pi" />
<DisplayEquation equation='\\frac{P}{EI}L^2 = n^2\\pi^2\\' />
<DisplayEquation equation='P_{cr} = \\frac{n^2\\pi^2EI}{L^2}\\' />
</BlueText>

 <BlueText>Buckling usually happens at the smallest non-zero value of <InlineEquation equation='P_{cr}' />
<DisplayEquation equation='n=1\\' />
</BlueText>

 <BlueText>Higher <InlineEquation equation='n' /> values can be achieved if columns are prevented from buckling at <InlineEquation equation='n=1' />
 </BlueText>

 <BlueText><strong>**End Derivation**</strong></BlueText>
</SubSubSection>
<SubSubSection title="Other Boundary Conditions">

<Image src='/Solid_Mechanics/Buckling-Figures/EulerConditions.png' width='5'><BlueText>Taken from TAM251 Lecture Notes - L13S8</BlueText></Image>

<BlueText>
Different boundary conditions change length used in the critical load formula to the effective length (<InlineEquation equation='L_e' />).
<DisplayEquation equation='P_{cr} = \\frac{\\pi^2EI}{L_e^2}\\' />
</BlueText>

</SubSubSection>
</Layout>